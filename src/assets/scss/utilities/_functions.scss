// General font size function that will convert integers into em values
// font-size: em(12);
@function em($target, $context: $base_font_size) {
  @if type-of($target) == "number" {
    @return ($target / $context) * 1em;
  } @else {
    $em-values: unquote("");
    @each $value in $target {
      // If the value is zero, return 0
      @if $value == 0 {
        $em-values: append($em-values, $value);
      } @else {
        $em-values: append($em-values, ($value / $context) * 1em);
      }
    }
    @return $em-values;
  }
}

@function rem($target, $context: $base_font_size) {
  @return ($target / $context) * 1rem;
}

// Baseline height calculations
// line-height: baseline($baseline_size);
@function baseline($baseline_size) {
  @return ($line / $baseline_size) * ceil($baseline_size / $line) * 1em;
}

// Baseline margin calculations
// margin-bottom: baseline-margin($baseline_size);
@function baseline-margin($baseline_size) {
  @return ($line / $baseline_size) * 1em;
}

// Convert Photoshop tracking to em
@function tracking($target) {
  // 1 unit = 1/1000 em
  @return ($target / 1000) * 1em;
}
